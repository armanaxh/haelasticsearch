






export HTTP_PROXY=http://proxy.cafebazaar.org:3128; export HTTPS_PROXY=http://proxy.cafebazaar.org:3128; export NO_PROXY=localhost,127.0.0.1,10.96.0.0/12,192.168.99.0/24,172.20.0.0/24


#### setup k8s for staging

# install one of the minikube drivers such as kvm2 or docker
minikube start --cpus 5 --memory 9384 --driver docker --nodes 3 # or kvm2
# minikube start --memory=max --cpus=max --driver docker --nodes 3

minikube addons enable ingress
minikube plugin kube-stat-metrics
# multi node cluster
https://minikube.sigs.k8s.io/docs/tutorials/multi_node/
# deploy metrics API
# error: Metrics API not available 
# minikube addons enable metrics-server or deploy on cluster
kubectl cluster-info
minikube dashboard



#### deploy elasticsearch operator and crds

kubectl create -f https://download.elastic.co/downloads/eck/1.8.0/crds.yaml
kubectl get crds

kubectl apply -f https://download.elastic.co/downloads/eck/1.8.0/operator.yaml

kubectl get pods -n elastic-system
kubectl -n elastic-system logs -f statefulset.apps/elastic-operator


# it is strongly recommended to increase the kernel setting vm.max_map_count to 262144 and leave node.store.allow_mmap unset.
# configure store module: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-store.html

# elastic health API: https://www.elastic.co/guide/en/elasticsearch/reference/7.15/cluster-health.html

cat <<EOF | kubectl apply -f -
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: quickstart
spec:
  version: 7.15.2
  nodeSets:
  - name: default
    count: 3
    config:
      node.store.allow_mmap: false # for test read configure store module
      
EOF


# spec:
#   nodeSets:
#   - name: default
#     count: 3
#     config:
#       index.store.type: niofs


kubectl get elasticsearch # check HEALTH and PHASE
kubectl get pods
kubectl get pvc


####
PASSWORD=$(kubectl get secret quickstart-es-elastic-user -o go-template='{{.data.elastic | base64decode}}')


### elastic sample config
https://gist.github.com/zsprackett/8546403

### health check
curl -X GET -I -u "elastic:$PASSWORD" -k "https://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s&pretty" -vvv


# affinity 
auto affinity

# persist data


# indexer

# snap shot


################################ Kibana

cat <<EOF | kubectl apply -f -
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: quickstart
spec:
  version: 7.15.2
  count: 1
  elasticsearchRef:
    name: quickstart
EOF


kubectl get kibana
kubectl get pod --selector='kibana.k8s.elastic.co/name=quickstart'
kubectl get service quickstart-kb-http


kubectl port-forward service/quickstart-kb-http 5601:5601  --address='0.0.0.0' &

kubectl port-forward service/quickstart-es-http 9200   --address='0.0.0.0' &
kubectl get secret quickstart-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode; echo
curl -X GET  "https://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=50s&pretty" --key certificates/elasticsearch-ca.pem  -k -u elastic





## add sample data






#### Heart beat : https://www.elastic.co/guide/en/beats/heartbeat/current/running-on-kubernetes.html
#### Avalibality metrics: https://www.elastic.co/guide/en/beats/metricbeat/current/running-on-kubernetes.html






#### snap shot: 


# Install the storage repository plugin
cat <<EOF | kubectl apply -f -

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-sample
spec:
  version: 7.15.2
  nodeSets:
  - name: default
    count: 3
    config:
      node.store.allow_mmap: false # for test read configure store module
      path.repo:
        - /tmp/backups
    podTemplate:
      spec:
        initContainers:
        - name: install-plugins
          command:
          - sh
          - -c
          - |
            bin/elasticsearch-plugin install --batch repository-gcs
EOF

curl -u "elastic:$PASSWORD" -X PUT -H "Content-Type: application/json" -d '{"type": "fs","settings": {"location": "/tmp/test2"}}'  "https://localhost:9200/_snapshot/test2" 






#### SnapShot

# create S3 repo

kubectl create secret generic aws-s3-keys --from-literal=access-key-id='<YOUR-ACCESS-KEY-ID>' --from-literal=access-secret-key='<YOUR-ACCESS-KEY-SECRET>'



# minio clinet for S3 and store snap shots
mc alias set minio kise-thr-nd-1.sotoon.cloud 4af5ad39ac455a28933fd6d130cd9b90679cba2f e37362a975041c119fadbb9fbca0a84983996c0802d43bf0c26b8a009f0dbf82842e95da8b3a3f75


kubectl create secret generic aws-s3-keys --from-literal=access-key-id='4af5ad39ac455a28933fd6d130cd9b90679cba2f' --from-literal=access-secret-key='e37362a975041c119fadbb9fbca0a84983996c0802d43bf0c26b8a009f0dbf82842e95da8b3a3f75'








https://github.com/elastic/cloud-on-k8s/tree/1.8/config/samples



GOOD for README:
 https://www.elastic.co/guide/en/cloud-on-k8s/1.8/k8s-beat-configuration-examples.html
 